version: 0.2
env:
  secrets-manager:
    LOGIN: prod/x23377852-sonar:login
    HOST: prod/x23377852-sonar:host
    PROJECT: prod/x23377852-sonar:project
    ORGANIZATION: prod/x23377852-sonar:org
phases:
  install:
    runtime-versions:
      python: 3.12.3  # Specify the Python version
      java: corretto17
    commands:
      - echo Installing dependencies...
      - pip install --upgrade pip
      - pip install virtualenv
      - echo Setting JAVA_HOME for Java 17...
      - export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto
      - export PATH=$JAVA_HOME/bin:$PATH
      - java -version
      - echo Installing SonarScanner...
      - curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      - unzip sonar-scanner-cli.zip -d /usr/local
      - export PATH=$PATH:/usr/local/sonar-scanner-5.0.1.3006-linux/bin/
      - echo Verifying dependencies...
      - which sonar-scanner
      - sonar-scanner --version
      - which jq

  pre_build:
    commands:
      - echo Setting up virtual environment...
      - python3 -m venv venv
      - source venv/bin/activate
      - pip install -r src/requirements.txt

  lint:
    commands:
      - echo Running lint checks...
      - source venv/bin/activate
      - pip install flake8  # Install linter
      - flake8 src --exclude=**/migrations/**,**/tests/**,**/staticfiles/**,**/venv/**,**/scripts/**,**/.venv/**,**/templates/**,**/__pycache__/** --max-line-length=120
      - echo Lint checks completed.
      
  build:
    commands:
      - echo Collecting static files...
      - source venv/bin/activate
      - python src/manage.py collectstatic --noinput
      - echo Running database migrations...
      - python src/manage.py makemigrations
      - python src/manage.py migrate
      - echo Running tests...
      - coverage run  src/manage.py test users.tests.test_users_views
      - coverage xml -o coverage.xml
      - echo Running SonarScanner...
      - JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto PATH=/usr/lib/jvm/java-17-amazon-corretto/bin:$PATH sonar-scanner  -Dsonar.projectKey=$PROJECT -Dsonar.organization=$ORGANIZATION -Dsonar.host.url=$HOST -Dsonar.token=$LOGIN -Dsonar.sources=src -Dsonar.exclusions=**/migrations/**,**/tests/**,**/staticfiles/**,**/venv/**,**/scripts/**,**/.venv/**,**/templates/**,**/__pycache__/** -Dsonar.python.version=3.12 -Dsonar.python.coverage.reportPaths=coverage.xml -Dsonar.scm.disabled=true
      - echo Checking SonarCloud Quality Gate Result...
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECT > result.json
      - cat result.json
      - |

        if [ "$(jq -r '.projectStatus.status' result.json)" = "ERROR" ]; then

          echo "❌ Quality Gate failed"

          exit 1

        else

          echo "✅ Quality Gate passed"

        fi

 
artifacts:
  files:
    - 'src/**/*'
    - 'Procfile'
    - '.ebextensions/**'
    - 'requirements.txt'
    - 'scripts/**'
  name: 'maximum-${VERSION}'
  discard-paths: no 

#Source → Lint & Format → Secrets Scan → Unit Tests → SonarCloud → Bandit → Build Artifact → Deploy → Post-Deploy Tests
